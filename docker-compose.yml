version: "3.8"

services:
  postgres:
    image: postgres:alpine
    environment:
      POSTGRES_DB: httpsms
      POSTGRES_PASSWORD: dbpassword
      POSTGRES_USER: dbusername
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - "5435:5432"
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "dbusername", "-d", "httpsms"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 5s

  redis:
    image: redis:latest
    command: redis-server
    volumes:
      - redis:/var/lib/redis
    ports:
      - "6379:6379"
    restart: on-failure

  api:
    build:
      context: ./api
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - ./api/.env
    restart: unless-stopped

  web:
    build:
      context: ./web
    ports:
      - "3000:3000"
    depends_on:
      - api
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - api
      - web
    restart: unless-stopped

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot;
      sleep 12h & wait $${!}; done"

volumes:
  redis:
  postgres:
